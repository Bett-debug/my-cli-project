"""Add username and password to customers

Revision ID: cdb3b18cc6c7
Revises: 53ed52684be8
Create Date: 2025-08-27 19:50:28.444279

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'cdb3b18cc6c7'
down_revision: Union[str, None] = '53ed52684be8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('cars', sa.Column('is_available', sa.Boolean(), nullable=True))
    op.drop_column('cars', 'vin')
    op.drop_column('cars', 'license_plate')
    op.drop_column('cars', 'late_fee_per_day')
    op.add_column('customers', sa.Column('username', sa.String(), nullable=False))
    op.add_column('customers', sa.Column('password', sa.String(), nullable=False))
    op.drop_index('ix_customers_email', table_name='customers')
    op.create_unique_constraint(None, 'customers', ['username'])
    op.drop_column('customers', 'name')
    op.drop_column('customers', 'email')
    op.drop_column('customers', 'password_hash')
    op.add_column('rentals', sa.Column('end_date', sa.DateTime(), nullable=True))
    op.alter_column('rentals', 'car_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('rentals', 'customer_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('rentals', 'start_date',
               existing_type=sa.DATE(),
               type_=sa.DateTime(),
               nullable=True)
    op.drop_column('rentals', 'total_charge')
    op.drop_column('rentals', 'due_date')
    op.drop_column('rentals', 'return_date')
    # ### end Alembic commands ###
    op.add_column('customers', sa.Column('username', sa.String(), nullable=False))
    op.add_column('customers', sa.Column('password', sa.String(), nullable=False))
    op.create_unique_constraint(None, 'customers', ['username'])



def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('rentals', sa.Column('return_date', sa.DATE(), nullable=True))
    op.add_column('rentals', sa.Column('due_date', sa.DATE(), nullable=False))
    op.add_column('rentals', sa.Column('total_charge', sa.FLOAT(), nullable=True))
    op.alter_column('rentals', 'start_date',
               existing_type=sa.DateTime(),
               type_=sa.DATE(),
               nullable=False)
    op.alter_column('rentals', 'customer_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('rentals', 'car_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('rentals', 'end_date')
    op.add_column('customers', sa.Column('password_hash', sa.VARCHAR(), nullable=False))
    op.add_column('customers', sa.Column('email', sa.VARCHAR(), nullable=False))
    op.add_column('customers', sa.Column('name', sa.VARCHAR(), nullable=False))
    op.drop_constraint(None, 'customers', type_='unique')
    op.create_index('ix_customers_email', 'customers', ['email'], unique=1)
    op.drop_column('customers', 'password')
    op.drop_column('customers', 'username')
    op.add_column('cars', sa.Column('late_fee_per_day', sa.FLOAT(), nullable=False))
    op.add_column('cars', sa.Column('license_plate', sa.VARCHAR(), nullable=False))
    op.add_column('cars', sa.Column('vin', sa.VARCHAR(), nullable=True))
    op.drop_column('cars', 'is_available')
    op.drop_constraint(None, 'customers', type_='unique')
    op.drop_column('customers', 'password')
    op.drop_column('customers', 'username')
    

    

