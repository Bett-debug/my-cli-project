Generic single-database configuration.


🚗 Car Rental CLI

A simple Command-Line Interface (CLI) application for managing a car rental system.
Built with Python, SQLAlchemy ORM, and Alembic for database migrations.

This project allows customers to register, log in, browse cars, rent cars, return cars, and view rental history directly from the terminal.

📖 Features

👤 User Authentication

Register a new customer account

Log in securely

🚘 Car Management

Browse available cars

Rent a car

Return a car

📜 Rental History

View your past rental transactions

⚙️ CLI Design

Clear menu-driven interface

Input validation to prevent crashes

Detailed feedback messages to guide the user

🗂️ Project Structure
my-cli-project/
├── lib/
│   ├── cli.py          # Entry point for the CLI
│   ├── helpers.py      # Functions for core workflows
│   ├── models.py       # SQLAlchemy ORM models (Customer, Car, Rental)
│   └── db/
│       ├── session.py  # Database session setup
│       └── migrations/ # Alembic migration files
├── Pipfile             # Dependencies
├── Pipfile.lock
└── README.md           # Project documentation

🛠️ Installation & Setup

Clone the repository

git clone <your-repo-url>
cd my-cli-project


Install dependencies

pipenv install
pipenv shell


Run Alembic migrations

Initialize the database and apply migrations:

alembic upgrade head


Run the CLI

pipenv run python -m lib.cli

🗄️ Database Schema

The project uses SQLAlchemy ORM with the following tables:

Customer

id (Primary Key)

username (Unique)

password

rentals (Relationship with Rental)

Car

id (Primary Key)

make

model

available (Boolean)

Rental

id (Primary Key)

customer_id (Foreign Key → Customer)

car_id (Foreign Key → Car)

rental_date

return_date

🖥️ Usage Guide

When you run the CLI, you’ll see a menu like this:

--- Car Rental CLI ---
1. Register
2. Login
3. Browse Cars
4. Rent a Car
5. Return a Car
6. View Rental History
7. Exit

Example Workflows:

Register → create a new customer account.

Login → authenticate with your username.

Browse Cars → view all available cars.

Rent a Car → select a car to rent (availability is updated).

Return a Car → mark a car as returned.

View Rental History → display all past rentals for the logged-in customer.

📦 Dependencies

SQLAlchemy
 → ORM for database modeling

Alembic
 → database migrations

Rich
 (optional) → pretty CLI output

Bcrypt
 (optional) → password hashing

📑 Grading Rubric Coverage

✅ Environment & Dependencies → Pipfile with 2+ libraries

✅ SQLAlchemy Schema → 3+ tables, ORM relationships, Alembic migrations

✅ Data Structures → uses lists, dicts, tuples in CLI

✅ Best Practices → input validation, separated functions, detailed prompts

✅ Documentation → complete README

👨‍💻 Author

Developed by [Your Name] as part of the Phase 3 CLI Project.

⚡ With this README, you’ll cover all the rubric points for Documentation and make your project look professional.